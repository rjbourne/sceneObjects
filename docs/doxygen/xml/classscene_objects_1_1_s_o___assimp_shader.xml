<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classscene_objects_1_1_s_o___assimp_shader" kind="class" language="C++" prot="public">
    <compoundname>sceneObjects::SO_AssimpShader</compoundname>
    <basecompoundref refid="classscene_objects_1_1_s_o___shader" prot="public" virt="non-virtual">sceneObjects::SO_Shader</basecompoundref>
    <includes refid="scene_models_8hpp" local="no">sceneModels.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___assimp_shader_1a45e509ee4c09486482a344a02f0b6529" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int sceneObjects::SO_AssimpShader::numberLights</definition>
        <argsstring></argsstring>
        <name>numberLights</name>
        <briefdescription>
<para>Number of point light sources in the scene. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="36" column="13" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___assimp_shader_1a63f7e65d971a29692149807e8f6d0117" prot="protected" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint sceneObjects::SO_AssimpShader::normalMatrixLoc</definition>
        <argsstring></argsstring>
        <name>normalMatrixLoc</name>
        <briefdescription>
<para>The OpenGL location of the mat4 uniform named &quot;normalMatrix&quot; in the shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="37" column="15" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___assimp_shader_1a082a5309ab9eb39b5e47b7dbe5199199" prot="protected" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint sceneObjects::SO_AssimpShader::viewPositionLoc</definition>
        <argsstring></argsstring>
        <name>viewPositionLoc</name>
        <briefdescription>
<para>The OpenGL location of the vec3 uniform named &quot;viewPos&quot; in the shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="38" column="15" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___assimp_shader_1ab25ca2a719695f4c29abbe935ae89e1f" prot="protected" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint sceneObjects::SO_AssimpShader::specularPowerLoc</definition>
        <argsstring></argsstring>
        <name>specularPowerLoc</name>
        <briefdescription>
<para>The OpenGL location of the unsigned int uniform named &quot;specPower&quot; in the shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="39" column="15" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a19f4a529473055d5257a8cf24c8a57aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLuint</type>
        <definition>GLuint sceneObjects::SO_AssimpShader::generate</definition>
        <argsstring>(int numberLightsIn, int diffuseTextures, int specularTextures, int normalTextures)</argsstring>
        <name>generate</name>
        <param>
          <type>int</type>
          <declname>numberLightsIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>diffuseTextures</declname>
        </param>
        <param>
          <type>int</type>
          <declname>specularTextures</declname>
        </param>
        <param>
          <type>int</type>
          <declname>normalTextures</declname>
        </param>
        <briefdescription>
<para>Generate the shader program using the number of lights/textures of each type as provided. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the current shader implementation will only use the first texture of each type provided. The shader implements a Phong lighting model. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="49" column="16" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="5" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a16427fc3cc435d3631cb76cee6bfcef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setModelMatrix</definition>
        <argsstring>(glm::mat4 modelMatrix) override</argsstring>
        <name>setModelMatrix</name>
        <reimplements refid="classscene_objects_1_1_s_o___shader_1a469e22af8baa4fdf1e1eb84f25a6b086">setModelMatrix</reimplements>
        <param>
          <type>glm::mat4</type>
          <declname>modelMatrix</declname>
        </param>
        <briefdescription>
<para>An override of the base class method which also calculates the transformation for normal vectors and passes this into the shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="51" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a22579eb2e1f36180807c9d12de009e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setViewPosition</definition>
        <argsstring>(glm::vec3 viewPosition) override</argsstring>
        <name>setViewPosition</name>
        <reimplements refid="classscene_objects_1_1_s_o___shader_1ace394ba61101dbcf3f35931f9107513c">setViewPosition</reimplements>
        <param>
          <type>glm::vec3</type>
          <declname>viewPosition</declname>
        </param>
        <briefdescription>
<para>Set the position of the camera in world space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="53" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1afcf89df4a74b6363e816440835dfb66e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setLightPosition</definition>
        <argsstring>(int index, glm::vec3 lightPosition)</argsstring>
        <name>setLightPosition</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>lightPosition</declname>
        </param>
        <briefdescription>
<para>Set the position of light number &apos;index&apos; in world space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="55" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="169" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a51a2fa51de9f9fcafc912d9015286163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setLightConstant</definition>
        <argsstring>(int index, float lightConstant)</argsstring>
        <name>setLightConstant</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lightConstant</declname>
        </param>
        <briefdescription>
<para>Set the constant term of the lights attenuation factor: 1 for a constant brightness source with distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="57" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a65ab939b24816e0422a4fa2c652191d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setLightLinear</definition>
        <argsstring>(int index, float lightLinear)</argsstring>
        <name>setLightLinear</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lightLinear</declname>
        </param>
        <briefdescription>
<para>Set the linear term of the lights attenuation factor: 0 for a constant brightness source with distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="59" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="195" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a4b9b52842b3f18c50f0790b9009d2809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setLightQuadratic</definition>
        <argsstring>(int index, float lightQuadratic)</argsstring>
        <name>setLightQuadratic</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lightQuadratic</declname>
        </param>
        <briefdescription>
<para>Set the quadratic term of the lights attenuation factor: 0 for a constant brightness source with distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="61" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="208" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1aa0b7fdd8471a21fa32c7d2e4be702005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setLightAmbient</definition>
        <argsstring>(int index, glm::vec3 lightAmbient)</argsstring>
        <name>setLightAmbient</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>lightAmbient</declname>
        </param>
        <briefdescription>
<para>Set the colour and strength of the lights ambient factor - independent of material properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="63" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="221" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a3dd3f87ba92f485ce0ac7eee7f32bb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setLightDiffuse</definition>
        <argsstring>(int index, glm::vec3 lightDiffuse)</argsstring>
        <name>setLightDiffuse</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>lightDiffuse</declname>
        </param>
        <briefdescription>
<para>Set the colour and strength of the lights diffuse factor - independent of material properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="65" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="234" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1aaa43d9c62abe6dbddbd579d4da733805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setLightSpecular</definition>
        <argsstring>(int index, glm::vec3 lightSpecular)</argsstring>
        <name>setLightSpecular</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>lightSpecular</declname>
        </param>
        <briefdescription>
<para>Set the colour and strength of the lights specular factor - independent of material properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="67" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="247" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a9818c0da9374f29aa2963cae830aa1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_AssimpShader::setSpecularPower</definition>
        <argsstring>(unsigned int specPower)</argsstring>
        <name>setSpecularPower</name>
        <param>
          <type>unsigned int</type>
          <declname>specPower</declname>
        </param>
        <briefdescription>
<para>Set the power of the specular highlights - higher integers produce &apos;sharper&apos; spots. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="69" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpShader.cpp" bodystart="257" bodyend="259"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a21ef07de1a025f555741a7db4fe5c3fc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_Shader::createVertexShader</definition>
        <argsstring>(const char *vertexSource)</argsstring>
        <name>createVertexShader</name>
        <param>
          <type>const char *</type>
          <declname>vertexSource</declname>
        </param>
        <briefdescription>
<para>Creates a vertex shader for the shader program using the char* argument. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="40" column="9" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Shader.cpp" bodystart="5" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1a88e296911a8c6245ff6a01406ad627b2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_Shader::createFragmentShader</definition>
        <argsstring>(const char *fragmentSource)</argsstring>
        <name>createFragmentShader</name>
        <param>
          <type>const char *</type>
          <declname>fragmentSource</declname>
        </param>
        <briefdescription>
<para>Creates a fragment shader for the shader program using the char* input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="41" column="9" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Shader.cpp" bodystart="24" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___assimp_shader_1aa780feaae596dfabf590287397cca39a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_Shader::linkProgram</definition>
        <argsstring>(void)</argsstring>
        <name>linkProgram</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Links the vertex and fragment shaders into a program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="42" column="9" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Shader.cpp" bodystart="42" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The shader for an <ref refid="classscene_objects_1_1_s_o___assimp_mesh" kindref="compound">SO_AssimpMesh</ref> object. </para>
    </briefdescription>
    <detaileddescription>
<para>This shader allows the use of diffuse, specular and normal maps if textures are provided It is intended to be used with the <ref refid="classscene_objects_1_1_s_o___assimp_mesh" kindref="compound">SO_AssimpMesh</ref> class - although this is not a requirement </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>sceneObjects::SO_AssimpShader</label>
        <link refid="classscene_objects_1_1_s_o___assimp_shader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sceneObjects::SO_Shader</label>
        <link refid="classscene_objects_1_1_s_o___shader"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>sceneObjects::SO_AssimpShader</label>
        <link refid="classscene_objects_1_1_s_o___assimp_shader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sceneObjects::SO_Shader</label>
        <link refid="classscene_objects_1_1_s_o___shader"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" line="34" column="1" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneModels.hpp" bodystart="34" bodyend="70"/>
    <listofallmembers>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a88e296911a8c6245ff6a01406ad627b2" prot="protected" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>createFragmentShader</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a88e296911a8c6245ff6a01406ad627b2" prot="public" virt="non-virtual" ambiguityscope="sceneObjects::SO_Shader::"><scope>sceneObjects::SO_AssimpShader</scope><name>createFragmentShader</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a21ef07de1a025f555741a7db4fe5c3fc" prot="protected" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>createVertexShader</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a21ef07de1a025f555741a7db4fe5c3fc" prot="public" virt="non-virtual" ambiguityscope="sceneObjects::SO_Shader::"><scope>sceneObjects::SO_AssimpShader</scope><name>createVertexShader</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a86949036217179a82ec0b4ed7e762e65" prot="private" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>fragmentShaderID</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a19f4a529473055d5257a8cf24c8a57aa" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>generate</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>getProgramID</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1aa780feaae596dfabf590287397cca39a" prot="protected" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>linkProgram</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a4cad0deb7c1d7a5fdc94013d97ded420" prot="private" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>modelMatrixLoc</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a63f7e65d971a29692149807e8f6d0117" prot="protected" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>normalMatrixLoc</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a45e509ee4c09486482a344a02f0b6529" prot="protected" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>numberLights</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a72081ae01daf467a90963fd55c712457" prot="private" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>programCreated</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a3bddab0e05819c68a16136488033764e" prot="private" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>programID</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a28bbb65858a7246ba21cbe47c9342920" prot="private" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>projectionMatrixLoc</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1aa0b7fdd8471a21fa32c7d2e4be702005" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setLightAmbient</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a51a2fa51de9f9fcafc912d9015286163" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setLightConstant</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a3dd3f87ba92f485ce0ac7eee7f32bb1c" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setLightDiffuse</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a65ab939b24816e0422a4fa2c652191d8" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setLightLinear</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1afcf89df4a74b6363e816440835dfb66e" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setLightPosition</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a4b9b52842b3f18c50f0790b9009d2809" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setLightQuadratic</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1aaa43d9c62abe6dbddbd579d4da733805" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setLightSpecular</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a16427fc3cc435d3631cb76cee6bfcef0" prot="public" virt="virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setModelMatrix</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a064bc26e370a8ebfe8046d5400d83518" prot="public" virt="virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setProjectionMatrix</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a9818c0da9374f29aa2963cae830aa1e6" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setSpecularPower</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a686a2c3bf7c954e54dec34134ebd1260" prot="public" virt="virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setViewMatrix</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a22579eb2e1f36180807c9d12de009e0c" prot="public" virt="virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>setViewPosition</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1ab25ca2a719695f4c29abbe935ae89e1f" prot="protected" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>specularPowerLoc</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a34141357f0e1e47358e038ea9a17d33a" prot="private" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>vertexShaderID</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a8e83085cb6f6829f6218b4c3514219c9" prot="private" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>viewMatrixLoc</name></member>
      <member refid="classscene_objects_1_1_s_o___assimp_shader_1a082a5309ab9eb39b5e47b7dbe5199199" prot="protected" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>viewPositionLoc</name></member>
      <member refid="classscene_objects_1_1_s_o___shader_1a1089f63927aca4120f238916f4adb7a4" prot="public" virt="non-virtual"><scope>sceneObjects::SO_AssimpShader</scope><name>~SO_Shader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
