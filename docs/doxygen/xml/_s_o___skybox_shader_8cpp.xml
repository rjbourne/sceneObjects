<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_s_o___skybox_shader_8cpp" kind="file" language="C++">
    <compoundname>SO_SkyboxShader.cpp</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_s_o___skybox_shader_8cpp_1a72036b965d7faa57b7625b246b1e0d21" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float skyboxVertices[]</definition>
        <argsstring>[]</argsstring>
        <name>skyboxVertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_SkyboxShader.cpp" line="6" column="7" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_SkyboxShader.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>STB_IMAGE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scene_objects_8hpp" kindref="compound">sceneObjects.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stb_image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_o___skybox_shader_8cpp_1a72036b965d7faa57b7625b246b1e0d21" kindref="member">skyboxVertices</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/><sp/>1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>-1.0f,<sp/>-1.0f,<sp/><sp/>1.0f,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>1.0f,<sp/>-1.0f,<sp/><sp/>1.0f</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//generate<sp/>a<sp/>skybox<sp/>using<sp/>a<sp/>vector<sp/>of<sp/>6<sp/>images<sp/>in<sp/>order<sp/>right<sp/>(+x),<sp/>left,<sp/>top<sp/>(+y),<sp/>bottom,<sp/>front<sp/>(-z),<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//max<sp/>2048<sp/>size<sp/>(some<sp/>frames<sp/>delay<sp/>in<sp/>render<sp/>function<sp/>if<sp/>larger)<sp/>why?<sp/>max<sp/>texture<sp/>size<sp/>in<sp/>buffer?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">GLuint<sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1ac066952ecfc5862048bedf26371d0d8e" kindref="member">sceneObjects::SO_SkyboxShader::generate</ref>(std::vector&lt;std::string&gt;<sp/>imageFilesIn)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imageFilesIn.size()<sp/>!=<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;expected<sp/>6<sp/>filenames<sp/>to<sp/>skybox<sp/>generate(),<sp/>got<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(imageFilesIn.size());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a29af717c378c23ae8bfc9bc6b000ae54" kindref="member">imageFiles</ref><sp/>=<sp/>imageFilesIn;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___skybox_shader_1a37222a342005910a422b8ebd2b618f6b" kindref="member">textureID</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_CUBE_MAP,<sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a37222a342005910a422b8ebd2b618f6b" kindref="member">textureID</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height,<sp/>numChannels;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi_set_flip_vertically_on_load(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>stbi_load(<ref refid="classscene_objects_1_1_s_o___skybox_shader_1a29af717c378c23ae8bfc9bc6b000ae54" kindref="member">imageFiles</ref>[i].c_str(),<sp/>&amp;width,<sp/>&amp;height,<sp/>&amp;numChannels,<sp/>STBI_rgb_alpha);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X<sp/>+<sp/>i,<sp/>0,<sp/>GL_RGBA8,<sp/>width,<sp/>height,<sp/>0,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>data);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>load<sp/>skybox<sp/>texture<sp/>at<sp/>path:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a29af717c378c23ae8bfc9bc6b000ae54" kindref="member">imageFiles</ref>[i];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(error.c_str());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi_image_free(data);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_CUBE_MAP,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_CUBE_MAP,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_CUBE_MAP,<sp/>GL_TEXTURE_WRAP_S,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_CUBE_MAP,<sp/>GL_TEXTURE_WRAP_T,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_CUBE_MAP,<sp/>GL_TEXTURE_WRAP_R,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vertexSource<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#version<sp/>330<sp/>core</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout<sp/>(location<sp/>=<sp/>0)<sp/>in<sp/>vec3<sp/>aPos;</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec3<sp/>TexCoords;</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>proj;</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>view;</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>model;</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>main()</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TexCoords<sp/>=<sp/>aPos;</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec4<sp/>pos<sp/>=<sp/>proj<sp/>*<sp/>view<sp/>*<sp/>model<sp/>*<sp/>vec4(aPos,<sp/>1.0);</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gl_Position<sp/>=<sp/>pos.xyww;</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})glsl&quot;;</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a21ef07de1a025f555741a7db4fe5c3fc" kindref="member">createVertexShader</ref>(vertexSource);</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fragmentSource<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#version<sp/>330<sp/>core</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec4<sp/>FragColor;</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec3<sp/>TexCoords;</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>samplerCube<sp/>skybox;</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>main()</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FragColor<sp/>=<sp/>texture(skybox,<sp/>TexCoords);</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})glsl&quot;;</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a88e296911a8c6245ff6a01406ad627b2" kindref="member">createFragmentShader</ref>(fragmentSource);</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1aa780feaae596dfabf590287397cca39a" kindref="member">linkProgram</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>glProgramUniform1i(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;skybox&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___skybox_shader_1a3c6db48f84b41192ec1b2eeb14729479" kindref="member">skyboxVAO</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___skybox_shader_1aae13f78bde28229e8b739a4259607cee" kindref="member">skyboxVBO</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(<ref refid="classscene_objects_1_1_s_o___skybox_shader_1a3c6db48f84b41192ec1b2eeb14729479" kindref="member">skyboxVAO</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1aae13f78bde28229e8b739a4259607cee" kindref="member">skyboxVBO</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_o___skybox_shader_8cpp_1a72036b965d7faa57b7625b246b1e0d21" kindref="member">skyboxVertices</ref>),<sp/>&amp;<ref refid="_s_o___skybox_shader_8cpp_1a72036b965d7faa57b7625b246b1e0d21" kindref="member">skyboxVertices</ref>,<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(0,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>model<sp/>matrix<sp/>of<sp/>the<sp/>skybox<sp/>(empty<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a5235f5d0187cbe3d17a7485912ccff87" kindref="member">sceneObjects::SO_SkyboxShader::setModelMatrix</ref>(glm::mat4<sp/>modelMatrix)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>modelMatrix<sp/>=<sp/>glm::mat4(glm::mat3(modelMatrix));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___shader_1a469e22af8baa4fdf1e1eb84f25a6b086" kindref="member">SO_Shader::setModelMatrix</ref>(modelMatrix);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>view<sp/>matrix<sp/>of<sp/>the<sp/>skybox<sp/>(removes<sp/>translations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a62235d4c9d9d9ddf394453feb0a250d0" kindref="member">sceneObjects::SO_SkyboxShader::setViewMatrix</ref>(glm::mat4<sp/>viewMatrix)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix<sp/>=<sp/>glm::mat4(glm::mat3(viewMatrix));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___shader_1a686a2c3bf7c954e54dec34134ebd1260" kindref="member">SO_Shader::setViewMatrix</ref>(viewMatrix);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//render<sp/>the<sp/>skybox<sp/>-<sp/>should<sp/>be<sp/>last<sp/>render<sp/>done<sp/>for<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//this<sp/>operation<sp/>leaves<sp/>the<sp/>shader<sp/>and<sp/>VAO<sp/>set<sp/>on<sp/>the<sp/>skybox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___skybox_shader_1a4908bc7418875ede7be3897c8544d6a5" kindref="member">sceneObjects::SO_SkyboxShader::render</ref>(GLenum<sp/>depthFuncReset)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>glDepthFunc(GL_LEQUAL);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(this-&gt;getProgramID());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(skyboxVAO);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_CUBE_MAP,<sp/>textureID);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>36);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>glDepthFunc(depthFuncReset);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="classscene_objects_1_1_s_o___skybox_shader_1ac583fae22abfea2678674ab59067dbb3" kindref="member">sceneObjects::SO_SkyboxShader::~SO_SkyboxShader</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteVertexArrays(1,<sp/>&amp;skyboxVAO);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;skyboxVBO);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_SkyboxShader.cpp"/>
  </compounddef>
</doxygen>
