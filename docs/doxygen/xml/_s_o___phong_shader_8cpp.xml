<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_s_o___phong_shader_8cpp" kind="file" language="C++">
    <compoundname>SO_PhongShader.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scene_objects_8hpp" kindref="compound">sceneObjects.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//numberLights<sp/>gives<sp/>number<sp/>of<sp/>point<sp/>lights<sp/>in<sp/>the<sp/>scene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//optionsIn<sp/>:<sp/>binary<sp/>flags<sp/>given<sp/>by<sp/>enums<sp/>SO_ShaderOptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expects<sp/>in:<sp/>position,<sp/>normal,<sp/>(ambient/diffuse/specular/alpha)Attrib,<sp/>color,<sp/>instanceMatrix,<sp/>normalInstMatrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//uniforms:<sp/>set<sp/>with<sp/>SO_PhongShader::set_____<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">GLuint<sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ae9dcc4a95ecb204d8013eb68d7a65a35" kindref="member">sceneObjects::SO_PhongShader::generate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberLightsIn,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optionsIn)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f4f09c77616e848f049b793a61fadd5" kindref="member">numberLights</ref><sp/>=<sp/>numberLightsIn;<sp/></highlight><highlight class="comment">//no.<sp/>of<sp/>point<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>=<sp/>optionsIn;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>shaders<sp/>and<sp/>link<sp/>them<sp/>-<sp/>delete<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>vertexSourceStr;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#version<sp/>330<sp/>core</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec3<sp/>position;</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec3<sp/>normal;)glsl&quot;;</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec3<sp/>ambientAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec3<sp/>diffuseAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec3<sp/>specularAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref><sp/>and<sp/>(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>float<sp/>alphaAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec&quot;</highlight><highlight class="normal"><sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>color;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>mat4<sp/>instanceMatrix;</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>mat4<sp/>normalInstMatrix;)glsl&quot;;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nout<sp/>vec3<sp/>AmbientMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nout<sp/>vec3<sp/>DiffuseMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nout<sp/>vec3<sp/>SpecularMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref><sp/>and<sp/>(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nout<sp/>float<sp/>AlphaMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nout<sp/>vec&quot;</highlight><highlight class="normal"><sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Color;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec3<sp/>norm;</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec3<sp/>worldPos;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>normalMatrix;</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>model;)glsl&quot;;</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>postNormalMatrix;</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>postModel;)glsl&quot;;</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>view;</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>proj;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>main()</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{)glsl&quot;;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\tAmbientMat<sp/>=<sp/>ambientAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\tDiffuseMat<sp/>=<sp/>diffuseAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\tSpecularMat<sp/>=<sp/>specularAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref><sp/>and<sp/>(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\tAlphaMat<sp/>=<sp/>alphaAttrib;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\tColor<sp/>=<sp/>color;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gl_Position<sp/>=<sp/>proj<sp/>*<sp/>view<sp/>*<sp/>)glsl&quot;<sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;postModel<sp/>*<sp/>instanceMatrix<sp/>*&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(<sp/>model<sp/>*<sp/>vec4(position,<sp/>1.0);</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>normalize(vec3()glsl&quot;<sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;postNormalMatrix<sp/>*<sp/>normalInstMatrix<sp/>*&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(<sp/>normalMatrix<sp/>*<sp/>vec4(normal,<sp/>0.0)));</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worldPos<sp/>=<sp/>vec3()glsl&quot;<sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;postModel<sp/>*<sp/>instanceMatrix<sp/>*&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(model<sp/>*<sp/>vec4(position,<sp/>1.0));</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>)glsl&quot;;</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vertexSource<sp/>=<sp/>vertexSourceStr.c_str();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a21ef07de1a025f555741a7db4fe5c3fc" kindref="member">createVertexShader</ref>(vertexSource);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fragmentSourceStr;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#version<sp/>330<sp/>core</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>PointLight<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>lightPos;</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>constant;</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>linear;</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>quadratic;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>ambient;</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>diffuse;</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>specular;</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};)glsl&quot;;</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec3<sp/>AmbientMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec3<sp/>DiffuseMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec3<sp/>SpecularMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref><sp/>and<sp/>(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>float<sp/>AlphaMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nin<sp/>vec&quot;</highlight><highlight class="normal"><sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Color;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec3<sp/>norm;</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec3<sp/>worldPos;</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec4<sp/>outColor;)glsl&quot;;</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nuniform<sp/>vec3<sp/>AmbientMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nuniform<sp/>vec3<sp/>DiffuseMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nuniform<sp/>vec3<sp/>SpecularMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref><sp/>and<sp/>(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nuniform<sp/>float<sp/>AlphaMat;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nuniform<sp/>vec&quot;</highlight><highlight class="normal"><sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Color;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>vec3<sp/>viewPos;</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>unsigned<sp/>int<sp/>specPower;</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>PointLight<sp/>lights[)glsl&quot;<sp/>+<sp/>std::to_string(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f4f09c77616e848f049b793a61fadd5" kindref="member">numberLights</ref>)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(];</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>CalcPointLight(PointLight<sp/>light,<sp/>vec3<sp/>normal,<sp/>vec3<sp/>viewDir)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>lightDir<sp/>=<sp/>normalize(light.lightPos<sp/>-<sp/>worldPos);</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>diffuse<sp/>shading</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>diff<sp/>=<sp/>max(dot(normal,<sp/>lightDir),<sp/>0.0);</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>specular<sp/>shading</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>reflectDir<sp/>=<sp/>reflect(-lightDir,<sp/>normal);</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>spec<sp/>=<sp/>pow(max(dot(viewDir,<sp/>reflectDir),<sp/>0.0),<sp/>specPower);</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>attenuation</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>distance<sp/><sp/><sp/><sp/>=<sp/>length(light.lightPos<sp/>-<sp/>worldPos);</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>attenuation<sp/>=<sp/>1.0<sp/>/<sp/>(light.constant<sp/>+<sp/>light.linear<sp/>*<sp/>distance<sp/>+<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>light.quadratic<sp/>*<sp/>(distance<sp/>*<sp/>distance));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>combine<sp/>results</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>ambient<sp/><sp/>=<sp/>light.ambient<sp/><sp/>*<sp/>)glsl&quot;<sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;AmbientMat&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Color.xyz&quot;</highlight><highlight class="normal">)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(;</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>diffuse<sp/><sp/>=<sp/>light.diffuse<sp/><sp/>*<sp/>diff<sp/>*<sp/>)glsl&quot;<sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;DiffuseMat&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Color.xyz&quot;</highlight><highlight class="normal">)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(;</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>specular<sp/>=<sp/>light.specular<sp/>*<sp/>spec<sp/>*<sp/>)glsl&quot;<sp/>+<sp/>(std::string)(((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;SpecularMat&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Color.xyz&quot;</highlight><highlight class="normal">)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(;</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambient<sp/><sp/>*=<sp/>attenuation;</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffuse<sp/><sp/>*=<sp/>attenuation;</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specular<sp/>*=<sp/>attenuation;</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(ambient<sp/>+<sp/>diffuse<sp/>+<sp/>specular);</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>main()</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>viewDir<sp/>=<sp/>normalize(viewPos<sp/>-<sp/>worldPos);<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>result<sp/>=<sp/>vec3(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>)glsl&quot;<sp/>+<sp/>std::to_string(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f4f09c77616e848f049b793a61fadd5" kindref="member">numberLights</ref>)<sp/>+<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>CalcPointLight(lights[i],<sp/>norm,<sp/>viewDir);</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})glsl&quot;;</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\toutColor<sp/>=<sp/>vec4(result,<sp/>AlphaMat);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\toutColor<sp/>=<sp/>vec4(result,<sp/>Color.a);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;outColor<sp/>=<sp/>vec4(result,<sp/>1.0);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>fragmentSourceStr<sp/>+=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>)glsl&quot;;</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fragmentSource<sp/>=<sp/>fragmentSourceStr.c_str();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a88e296911a8c6245ff6a01406ad627b2" kindref="member">createFragmentShader</ref>(fragmentSource);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1aa780feaae596dfabf590287397cca39a" kindref="member">linkProgram</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>locations<sp/>of<sp/>shader<sp/>uniforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ac1fd3f3db1049baf015085f7cea5185e" kindref="member">normalMatrixLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;normalMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1afe829def560f59d49524a0682d0c5f67" kindref="member">viewPositionLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;viewPos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a3ea6e1907f0a853e36d55fb7b239de51" kindref="member">specularPowerLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;specPower&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a2e6eea302993cd9ab32fa7ec4c56d57a" kindref="member">setSpecularPower</ref>(32);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/>SO_INSTANCED)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a747444761f80a704e1e80abae9974eb7" kindref="member">postModelMatrixLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;postModel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a84ff59c0ad502fa3279841a8c24f9127" kindref="member">postNormalMatrixLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;postNormalMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/>SO_MATERIAL)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a5c4e44ce01176b880a29dbbd80475806" kindref="member">ambientMatLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;AmbientMat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/>SO_DIFFUSE_ATTRIBUTE)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1af2cb7986e3754f7c5070fa217b342ef5" kindref="member">diffuseMatLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;DiffuseMat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/>SO_SPECULAR_ATTRIBUTE)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ac3716befcaea25f0a53af1f342d565ff" kindref="member">specularMatLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;SpecularMat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/>SO_ALPHA_ATTRIBUTE)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref><sp/>and<sp/>(<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1abc30421d6cdf3c3615a356be51f23294" kindref="member">alphaMatLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;AlphaMat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classscene_objects_1_1_s_o___phong_shader_1a6f3acfd29111a5c7894dcf01fd1c0ba0" kindref="member">options</ref><sp/>&amp;<sp/>SO_COLOR_ATTRIBUTE)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a0ba6951a4cbb45ce90b0cae2ad9bf7fb" kindref="member">SO_COLOR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1af0cfebc3f7e0f11c95887ccb5857cc58" kindref="member">colorLoc</ref><sp/>=<sp/>glGetUniformLocation(this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Color&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classscene_objects_1_1_s_o___shader_1af20a5f6692ee551d05997a1cd0aad875" kindref="member">getProgramID</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//applies<sp/>the<sp/>model<sp/>matrix<sp/>to<sp/>the<sp/>shader<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//model<sp/>matrix<sp/>transforms<sp/>from<sp/>modelspace<sp/>to<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//also<sp/>creates<sp/>and<sp/>applies<sp/>the<sp/>corresponding<sp/>normal<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ae3d206f91193b86296eb3f12227c2415" kindref="member">sceneObjects::SO_PhongShader::setModelMatrix</ref>(glm::mat4<sp/>modelMatrix)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___shader_1a469e22af8baa4fdf1e1eb84f25a6b086" kindref="member">SO_Shader::setModelMatrix</ref>(modelMatrix);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>normalMatrix<sp/>=<sp/>glm::transpose(glm::inverse(modelMatrix));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniformMatrix4fv(this-&gt;getProgramID(),<sp/>normalMatrixLoc,<sp/>1,<sp/>GL_FALSE,<sp/>glm::value_ptr(normalMatrix));</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//applies<sp/>the<sp/>post<sp/>model<sp/>matrix<sp/>to<sp/>the<sp/>shader<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//the<sp/>post<sp/>model<sp/>matrix<sp/>is<sp/>applied<sp/>to<sp/>all<sp/>instances<sp/>of<sp/>the<sp/>model<sp/>in<sp/>world<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//only<sp/>useable<sp/>if<sp/>the<sp/>shader<sp/>has<sp/>instanced<sp/>set<sp/>to<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//model<sp/>matrix<sp/>transforms<sp/>from<sp/>worldspace<sp/>to<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//also<sp/>creates<sp/>and<sp/>applies<sp/>the<sp/>corresponding<sp/>normal<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a75dcf3546f39fa45891e513a029b8a42" kindref="member">sceneObjects::SO_PhongShader::setPostModelMatrix</ref>(glm::mat4<sp/>modelMatrix)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a34f4602000f79a19051e92a925ee3f8c" kindref="member">SO_INSTANCED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniformMatrix4fv(this-&gt;getProgramID(),<sp/>postModelMatrixLoc,<sp/>1,<sp/>GL_FALSE,<sp/>glm::value_ptr(modelMatrix));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::mat4<sp/>normalMatrix<sp/>=<sp/>glm::transpose(glm::inverse(modelMatrix));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniformMatrix4fv(this-&gt;getProgramID(),<sp/>postNormalMatrixLoc,<sp/>1,<sp/>GL_FALSE,<sp/>glm::value_ptr(normalMatrix));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>position<sp/>of<sp/>the<sp/>camera<sp/>in<sp/>the<sp/>shader<sp/>program<sp/>in<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//method<sp/>has<sp/>no<sp/>effect<sp/>in<sp/>SO::Shader<sp/>base<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a911a249b7e7113a2bf72f5589396aaf5" kindref="member">sceneObjects::SO_PhongShader::setViewPosition</ref>(glm::vec3<sp/>viewPosition)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>viewPositionLoc,<sp/>1,<sp/>glm::value_ptr(viewPosition));</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>position<sp/>of<sp/>a<sp/>light<sp/>in<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//index<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>light<sp/>(rom<sp/>0<sp/>to<sp/>numberLights-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//lightPosition<sp/>is<sp/>the<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ad6871de997e401d9c59061ac780112d8" kindref="member">sceneObjects::SO_PhongShader::setLightPosition</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>glm::vec3<sp/>lightPosition)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>to<sp/>lights<sp/>array<sp/>is<sp/>out<sp/>of<sp/>range\nrecieved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nlength:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(numberLights);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lights[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;].lightPos&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>lightPositionLoc<sp/>=<sp/>glGetUniformLocation(this-&gt;getProgramID(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>lightPositionLoc,<sp/>1,<sp/>glm::value_ptr(lightPosition));</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>constant<sp/>attenuation<sp/>factor<sp/>of<sp/>a<sp/>light<sp/>in<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//index<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>light<sp/>(rom<sp/>0<sp/>to<sp/>numberLights-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//lightConstant<sp/>is<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1aa356fe9cf434ae3d48127f87bc75d692" kindref="member">sceneObjects::SO_PhongShader::setLightConstant</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lightConstant)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>to<sp/>lights<sp/>array<sp/>is<sp/>out<sp/>of<sp/>range\nrecieved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nlength:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(numberLights);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lights[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;].constant&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>lightConstantLoc<sp/>=<sp/>glGetUniformLocation(this-&gt;getProgramID(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform1f(this-&gt;getProgramID(),<sp/>lightConstantLoc,<sp/>lightConstant);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>linear<sp/>attenuation<sp/>factor<sp/>of<sp/>a<sp/>light<sp/>in<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//index<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>light<sp/>(rom<sp/>0<sp/>to<sp/>numberLights-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//lightLinear<sp/>is<sp/>the<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a242628db9b1f67458fe15ff516a24f4a" kindref="member">sceneObjects::SO_PhongShader::setLightLinear</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lightLinear)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>to<sp/>lights<sp/>array<sp/>is<sp/>out<sp/>of<sp/>range\nrecieved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nlength:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(numberLights);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lights[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;].linear&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>lightLinearLoc<sp/>=<sp/>glGetUniformLocation(this-&gt;getProgramID(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform1f(this-&gt;getProgramID(),<sp/>lightLinearLoc,<sp/>lightLinear);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>quadratic<sp/>attenuation<sp/>factor<sp/>of<sp/>a<sp/>light<sp/>in<sp/>worldspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//index<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>light<sp/>(rom<sp/>0<sp/>to<sp/>numberLights-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//lightQuadratic<sp/>is<sp/>the<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ad1824fa57d7216dcefdf97693858d26c" kindref="member">sceneObjects::SO_PhongShader::setLightQuadratic</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lightQuadratic)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>to<sp/>lights<sp/>array<sp/>is<sp/>out<sp/>of<sp/>range\nrecieved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nlength:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(numberLights);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lights[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;].quadratic&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>lightQuadraticLoc<sp/>=<sp/>glGetUniformLocation(this-&gt;getProgramID(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform1f(this-&gt;getProgramID(),<sp/>lightQuadraticLoc,<sp/>lightQuadratic);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>ambient<sp/>color<sp/>and<sp/>strength<sp/>of<sp/>a<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//index<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>light<sp/>(rom<sp/>0<sp/>to<sp/>numberLights-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//lightAmbient<sp/>is<sp/>the<sp/>color<sp/>(RGB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ac5d6445607c1d49ca957e3e450ce2b64" kindref="member">sceneObjects::SO_PhongShader::setLightAmbient</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>glm::vec3<sp/>lightAmbient)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>to<sp/>lights<sp/>array<sp/>is<sp/>out<sp/>of<sp/>range\nrecieved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nlength:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(numberLights);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lights[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;].ambient&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>lightAmbientLoc<sp/>=<sp/>glGetUniformLocation(this-&gt;getProgramID(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>lightAmbientLoc,<sp/>1,<sp/>glm::value_ptr(lightAmbient));</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>diffuse<sp/>color<sp/>and<sp/>strength<sp/>of<sp/>a<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//index<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>light<sp/>(rom<sp/>0<sp/>to<sp/>numberLights-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//lightDiffuse<sp/>is<sp/>the<sp/>color<sp/>(RGB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a29b3859bb3eb69e093f68d8285c59358" kindref="member">sceneObjects::SO_PhongShader::setLightDiffuse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>glm::vec3<sp/>lightDiffuse)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>to<sp/>lights<sp/>array<sp/>is<sp/>out<sp/>of<sp/>range\nrecieved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nlength:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(numberLights);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lights[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;].diffuse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>lightDiffuseLoc<sp/>=<sp/>glGetUniformLocation(this-&gt;getProgramID(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>lightDiffuseLoc,<sp/>1,<sp/>glm::value_ptr(lightDiffuse));</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>specular<sp/>color<sp/>and<sp/>strength<sp/>of<sp/>a<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//index<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>light<sp/>(rom<sp/>0<sp/>to<sp/>numberLights-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//lightSpecular<sp/>is<sp/>the<sp/>color<sp/>(RGB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1af0029b8619e7da10bbd8500981e2ba70" kindref="member">sceneObjects::SO_PhongShader::setLightSpecular</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>glm::vec3<sp/>lightSpecular)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>to<sp/>lights<sp/>array<sp/>is<sp/>out<sp/>of<sp/>range\nrecieved:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nlength:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(numberLights);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(error.c_str());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lights[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;].specular&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>lightSpecularLoc<sp/>=<sp/>glGetUniformLocation(this-&gt;getProgramID(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>lightSpecularLoc,<sp/>1,<sp/>glm::value_ptr(lightSpecular));</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>ambient<sp/>color<sp/>of<sp/>a<sp/>material</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1ac5d07d044185288642a28801d18e5a19" kindref="member">sceneObjects::SO_PhongShader::setMaterialAmbient</ref>(glm::vec3<sp/>ambientMaterial)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref><sp/>and<sp/>(options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59affee27d801c942710393d065d3412a8e" kindref="member">SO_AMBIENT_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>ambientMatLoc,<sp/>1,<sp/>glm::value_ptr(ambientMaterial));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>diffuse<sp/>color<sp/>of<sp/>a<sp/>material</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1aa5cd652ce6a236bd7caa88b7a22e2ab7" kindref="member">sceneObjects::SO_PhongShader::setMaterialDiffuse</ref>(glm::vec3<sp/>diffuseMaterial)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref><sp/>and<sp/>(options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59afe123b98c45a6da56c2983e5693d0d0a" kindref="member">SO_DIFFUSE_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>diffuseMatLoc,<sp/>1,<sp/>glm::value_ptr(diffuseMaterial));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>specular<sp/>color<sp/>of<sp/>a<sp/>material</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a661a1a10ec19c8739fa9483a77c3dda9" kindref="member">sceneObjects::SO_PhongShader::setMaterialSpecular</ref>(glm::vec3<sp/>specularMaterial)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref><sp/>and<sp/>(options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59aef134e3aafeec3681ca063d6a821a5c1" kindref="member">SO_SPECULAR_ATTRIBUTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>specularMatLoc,<sp/>1,<sp/>glm::value_ptr(specularMaterial));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>alpha<sp/>of<sp/>a<sp/>material</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a88d9cae57e7331f8ec854f42309846b9" kindref="member">sceneObjects::SO_PhongShader::setMaterialAlpha</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alphaMaterial)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref><sp/>and<sp/>(options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a25171d3b39ec70b8a7e720e41a64dab3" kindref="member">SO_ALPHA_ATTRIBUTE</ref><sp/>and<sp/>(options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniform1f(this-&gt;getProgramID(),<sp/>ambientMatLoc,<sp/>alphaMaterial);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a955e7ed6225dd0794145c337a6d51143" kindref="member">sceneObjects::SO_PhongShader::setColor</ref>(glm::vec3<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniform3fv(this-&gt;getProgramID(),<sp/>colorLoc,<sp/>1,<sp/>glm::value_ptr(color));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;cannot<sp/>pass<sp/>vec3<sp/>as<sp/>color<sp/>argument<sp/>when<sp/>alpha<sp/>is<sp/>enabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a955e7ed6225dd0794145c337a6d51143" kindref="member">sceneObjects::SO_PhongShader::setColor</ref>(glm::vec4<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>!=<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59a4bf50d0f5e7329cb1e8d7eb315b6845c" kindref="member">SO_MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>==<sp/><ref refid="namespacescene_objects_1a97fb2e6562dc9a261e6c5925cdbccd59ab46d5619ba61008aa949a5b23a84e053" kindref="member">SO_ALPHA</ref>)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glProgramUniform4fv(this-&gt;getProgramID(),<sp/>colorLoc,<sp/>1,<sp/>glm::value_ptr(color));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;cannot<sp/>pass<sp/>vec4<sp/>as<sp/>color<sp/>argument<sp/>when<sp/>alpha<sp/>is<sp/>disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___phong_shader_1a2e6eea302993cd9ab32fa7ec4c56d57a" kindref="member">sceneObjects::SO_PhongShader::setSpecularPower</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>specPower)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>glProgramUniform1ui(this-&gt;getProgramID(),<sp/>specularPowerLoc,<sp/>specPower);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_PhongShader.cpp"/>
  </compounddef>
</doxygen>
