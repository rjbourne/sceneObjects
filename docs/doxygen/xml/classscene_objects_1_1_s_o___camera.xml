<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classscene_objects_1_1_s_o___camera" kind="class" language="C++" prot="public">
    <compoundname>sceneObjects::SO_Camera</compoundname>
    <includes refid="scene_objects_8hpp" local="no">sceneObjects.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1a1894f7707dd4471b62ec773790414058" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classscene_objects_1_1_s_o___shader" kindref="compound">SO_Shader</ref> * &gt;</type>
        <definition>std::vector&lt;SO_Shader*&gt; sceneObjects::SO_Camera::shaderPointers</definition>
        <argsstring></argsstring>
        <name>shaderPointers</name>
        <briefdescription>
<para>A vector of pointers to the shaders which must be updated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="243" column="17" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1a832f7fe1eed52f64fd1db557280573a3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sceneObjects::SO_Camera::fov</definition>
        <argsstring></argsstring>
        <name>fov</name>
        <briefdescription>
<para>the field of view in degrees </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="245" column="15" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1a5a2d910a3c0fb298ac460e690ad61e2c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sceneObjects::SO_Camera::aspectRatio</definition>
        <argsstring></argsstring>
        <name>aspectRatio</name>
        <briefdescription>
<para>The aspect ratio of the camera. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="246" column="15" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1ae8e9d5f6de1c1f78315dfe76d167a6f7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sceneObjects::SO_Camera::nearClip</definition>
        <argsstring></argsstring>
        <name>nearClip</name>
        <briefdescription>
<para>The distance to the near clipping plane - fragments closer than this distance will not be rendered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="247" column="15" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1a5462944bda5c622f2e451e7f1f7e3b72" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sceneObjects::SO_Camera::farClip</definition>
        <argsstring></argsstring>
        <name>farClip</name>
        <briefdescription>
<para>The distance to the far clipping plane - fragments further than this will not be rendered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="248" column="15" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1a0da7a0d313e790197b3b75b94029aff4" prot="public" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 sceneObjects::SO_Camera::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <briefdescription>
<para>The position of the camera in world space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="249" column="19" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1a73c6f5e2d6301258a214501e4fb72bfd" prot="public" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 sceneObjects::SO_Camera::front</definition>
        <argsstring></argsstring>
        <name>front</name>
        <briefdescription>
<para>A vec3 pointing in the direction of the centre of the camera&apos;s FOV. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="250" column="19" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscene_objects_1_1_s_o___camera_1af828bbf603ea418bf8725f724833ec17" prot="public" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 sceneObjects::SO_Camera::up</definition>
        <argsstring></argsstring>
        <name>up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A vec3 pointing in the upwards direction of the camera&apos;s frame </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="251" column="19" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscene_objects_1_1_s_o___camera_1ac808d40d9217a719c275ef718e83d081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sceneObjects::SO_Camera::SO_Camera</definition>
        <argsstring>(float fovIn=45.0f, float aspectRatioIn=1.0f, float nearClipIn=0.1f, float farClipIn=100.0, glm::vec3 positionIn=glm::vec3(0.0f, 0.0f, 0.0f), glm::vec3 frontIn=glm::vec3(0.0f, 0.0f, -1.0f), glm::vec3 upIn=glm::vec3(0.0f, 1.0f, 0.0f))</argsstring>
        <name>SO_Camera</name>
        <param>
          <type>float</type>
          <declname>fovIn</declname>
          <defval>45.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>aspectRatioIn</declname>
          <defval>1.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>nearClipIn</declname>
          <defval>0.1f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>farClipIn</declname>
          <defval>100.0</defval>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>positionIn</declname>
          <defval>glm::vec3(0.0f, 0.0f, 0.0f)</defval>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>frontIn</declname>
          <defval>glm::vec3(0.0f, 0.0f, -1.0f)</defval>
        </param>
        <param>
          <type>glm::vec3</type>
          <declname>upIn</declname>
          <defval>glm::vec3(0.0f, 1.0f, 0.0f)</defval>
        </param>
        <briefdescription>
<para>Constructor for a camera object. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>float fov</computeroutput> the field of view in degrees <computeroutput>float aspectRatio</computeroutput> The aspect ratio of the camera <computeroutput>float nearClip</computeroutput> The distance to the near clipping plane - fragments closer than this distance will not be rendered <computeroutput>float farClip</computeroutput> The distance to the far clipping plane - fragments further than this will not be rendered <computeroutput>glm::vec3 position</computeroutput> The position of the camera in world space <computeroutput>glm::vec3 front</computeroutput> A vec3 pointing in the direction of the centre of the camera&apos;s FOV <computeroutput>glm::vec3 up</computeroutput> A vec3 pointing in the upwards direction of the camera&apos;s frame </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="262" column="9" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Camera.cpp" bodystart="3" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___camera_1a790f7b97f5636d3c604c80b66db47137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_Camera::linkShader</definition>
        <argsstring>(SO_Shader *shaderRefIn)</argsstring>
        <name>linkShader</name>
        <param>
          <type><ref refid="classscene_objects_1_1_s_o___shader" kindref="compound">SO_Shader</ref> *</type>
          <declname>shaderRefIn</declname>
        </param>
        <briefdescription>
<para>link a shader passed in by pointer to the camera object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="264" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Camera.cpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___camera_1aa82b06b12f21c24cd3f871af6ad216ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_Camera::unlinkShader</definition>
        <argsstring>(SO_Shader *shaderRefIn)</argsstring>
        <name>unlinkShader</name>
        <param>
          <type><ref refid="classscene_objects_1_1_s_o___shader" kindref="compound">SO_Shader</ref> *</type>
          <declname>shaderRefIn</declname>
        </param>
        <briefdescription>
<para>unlink a shader passed in by pointer from the camera object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="266" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Camera.cpp" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___camera_1ac7e19d1848b7b606602eb0787e41e8d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_Camera::updateViewMatrix</definition>
        <argsstring>(void)</argsstring>
        <name>updateViewMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>update the view matrices of all linked shaders to the cameras current settings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="268" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Camera.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscene_objects_1_1_s_o___camera_1a564ca4e151b155ebc946860dfd4309d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sceneObjects::SO_Camera::updateProjectionMatrix</definition>
        <argsstring>(void)</argsstring>
        <name>updateProjectionMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>update the projection (proj) matrices of all linked shaders to the cameras current settings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="270" column="14" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_Camera.cpp" bodystart="23" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A 3D camera capable of creating view/projection matrices to linked shader programs on call. </para>
    </briefdescription>
    <detaileddescription>
<para>This camera class is designed to allow multiple objects to be kept in the same scene by automatically updating the relevant view and projection matrices with the <ref refid="classscene_objects_1_1_s_o___camera_1ac7e19d1848b7b606602eb0787e41e8d4" kindref="member">updateViewMatrix()</ref> and <ref refid="classscene_objects_1_1_s_o___camera_1a564ca4e151b155ebc946860dfd4309d0" kindref="member">updateProjectionMatrix()</ref> methods. Any derived class of <ref refid="classscene_objects_1_1_s_o___shader" kindref="compound">SO_Shader</ref> can be added to the camera. </para>
    </detaileddescription>
    <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" line="242" column="1" bodyfile="C:/Users/Robert/Documents/GitHub/sceneObjects/HEADERS/sceneObjects.hpp" bodystart="242" bodyend="271"/>
    <listofallmembers>
      <member refid="classscene_objects_1_1_s_o___camera_1a5a2d910a3c0fb298ac460e690ad61e2c" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>aspectRatio</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1a5462944bda5c622f2e451e7f1f7e3b72" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>farClip</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1a832f7fe1eed52f64fd1db557280573a3" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>fov</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1a73c6f5e2d6301258a214501e4fb72bfd" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>front</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1a790f7b97f5636d3c604c80b66db47137" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>linkShader</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1ae8e9d5f6de1c1f78315dfe76d167a6f7" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>nearClip</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1a0da7a0d313e790197b3b75b94029aff4" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>position</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1a1894f7707dd4471b62ec773790414058" prot="private" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>shaderPointers</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1ac808d40d9217a719c275ef718e83d081" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>SO_Camera</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1aa82b06b12f21c24cd3f871af6ad216ac" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>unlinkShader</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1af828bbf603ea418bf8725f724833ec17" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>up</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1a564ca4e151b155ebc946860dfd4309d0" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>updateProjectionMatrix</name></member>
      <member refid="classscene_objects_1_1_s_o___camera_1ac7e19d1848b7b606602eb0787e41e8d4" prot="public" virt="non-virtual"><scope>sceneObjects::SO_Camera</scope><name>updateViewMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
