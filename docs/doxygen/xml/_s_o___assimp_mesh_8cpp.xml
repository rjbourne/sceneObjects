<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_s_o___assimp_mesh_8cpp" kind="file" language="C++">
    <compoundname>SO_AssimpMesh.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scene_objects_8hpp" kindref="compound">sceneObjects.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scene_models_8hpp" kindref="compound">sceneModels.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>craetes<sp/>a<sp/>shader<sp/>for<sp/>the<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="classscene_objects_1_1_s_o___assimp_shader" kindref="compound">sceneObjects::SO_AssimpShader</ref>*<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a5a53d2ae2e8a1c62938c68fd4d039703" kindref="member">sceneObjects::SO_AssimpMesh::createShader</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberLights)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1ad2a76aa42ad29c802215c8f500124bb4" kindref="member">shader</ref><sp/>=<sp/>SO_AssimpShader();</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1ad2a76aa42ad29c802215c8f500124bb4" kindref="member">shader</ref>.<ref refid="classscene_objects_1_1_s_o___assimp_shader_1a19f4a529473055d5257a8cf24c8a57aa" kindref="member">generate</ref>(numberLights,<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1af9bda1f0374155af0866eac6003e8b0c" kindref="member">diffuseMaps</ref>.size(),<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a45ce815c248cbb7da5858fcdbc2369fd" kindref="member">specularMaps</ref>.size(),<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a1855ae3ba445ae95b6b75ced6b1b64e8" kindref="member">normalMaps</ref>.size());</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a722ea36f4a75528702dc41b0c16416bb" kindref="member">vao</ref>);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a79f652a17fb01cc48f1e044df93fb642" kindref="member">vbo</ref>);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a3e1db6a9ecde32a45e5b3030e6cc38fe" kindref="member">ebo</ref>);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a722ea36f4a75528702dc41b0c16416bb" kindref="member">vao</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a79f652a17fb01cc48f1e044df93fb642" kindref="member">vbo</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a6614015236fd651afe323f04830c85f9" kindref="member">vertices</ref>.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SO_AssimpVertex),<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a6614015236fd651afe323f04830c85f9" kindref="member">vertices</ref>[0],<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a3e1db6a9ecde32a45e5b3030e6cc38fe" kindref="member">ebo</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ELEMENT_ARRAY_BUFFER,<sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a857b7596625d8d6371deba2a0dc15be2" kindref="member">elements</ref>.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>&amp;<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a857b7596625d8d6371deba2a0dc15be2" kindref="member">elements</ref>[0],<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(0,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SO_AssimpVertex),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(1);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(1,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SO_AssimpVertex),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)offsetof(SO_AssimpVertex,<sp/>normal));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//texture<sp/>coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(2);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(2,<sp/>2,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SO_AssimpVertex),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)offsetof(SO_AssimpVertex,<sp/>texCoords));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a1855ae3ba445ae95b6b75ced6b1b64e8" kindref="member">normalMaps</ref>.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tangents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(3);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertexAttribPointer(3,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SO_AssimpVertex),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)offsetof(SO_AssimpVertex,<sp/>tangent));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classscene_objects_1_1_s_o___assimp_mesh_1ad2a76aa42ad29c802215c8f500124bb4" kindref="member">shader</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//draws<sp/>the<sp/>mesh<sp/>-<sp/>call<sp/>at<sp/>render<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1a51705d2c7d7d4c4afa9abf7c7dcb6ec3" kindref="member">sceneObjects::SO_AssimpMesh::render</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(shader.getProgramID());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diffuseMaps.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3fv(glGetUniformLocation(shader.getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;colorDiffuse&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>glm::value_ptr(diffuseColor));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader.getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;textureDiffuse&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>diffuseMaps[0].textureId);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specularMaps.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3fv(glGetUniformLocation(shader.getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;colorSpecular&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>glm::value_ptr(specularColor));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader.getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;textureSpecular&quot;</highlight><highlight class="normal">),<sp/>1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>specularMaps[0].textureId);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalMaps.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader.getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;textureNormal&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>normalMaps[0].textureId);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(vao);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawElements(GL_TRIANGLES,<sp/>elements.size(),<sp/>GL_UNSIGNED_INT,<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="classscene_objects_1_1_s_o___assimp_mesh_1ab02d518dd5997303a9e716b695e2698b" kindref="member">sceneObjects::SO_AssimpMesh::~SO_AssimpMesh</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteVertexArrays(1,<sp/>&amp;vao);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;vbo);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;ebo);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Robert/Documents/GitHub/sceneObjects/SRC/SO_AssimpMesh.cpp"/>
  </compounddef>
</doxygen>
